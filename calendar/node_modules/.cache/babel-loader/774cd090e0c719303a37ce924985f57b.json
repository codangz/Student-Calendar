{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derek\\\\OneDrive\\\\Documents\\\\CPP Semesters\\\\Spring 2022\\\\CS 4800 - Software Engineering\\\\codangz-project\\\\CS4800-Project\\\\calendar\\\\src\\\\Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst myEvents = [{\n  title: \"Meeting\",\n  allDay: true,\n  start: new Date(2022, 2, 1),\n  end: new Date(2022, 2, 2)\n}];\n\nfunction CalendarUI() {\n  _s();\n\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    end: \"\"\n  });\n  const [allEvents, setAllEvents] = useState(myEvents);\n\n  function handleAddEvent() {\n    setAllEvents([...allEvents, newEvent]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    localizer: localizer,\n    events: allEvents,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    style: {\n      height: 800,\n      margin: \"50px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarUI, \"zeZ1VJj621ABaRWpHPGyLZmSbJE=\");\n\n_c = CalendarUI;\nexport default CalendarUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarUI\");","map":{"version":3,"sources":["C:/Users/derek/OneDrive/Documents/CPP Semesters/Spring 2022/CS 4800 - Software Engineering/codangz-project/CS4800-Project/calendar/src/Calendar.js"],"names":["React","useState","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","locales","require","localizer","myEvents","title","allDay","start","Date","end","CalendarUI","newEvent","setNewEvent","allEvents","setAllEvents","handleAddEvent","height","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,oBAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,OAAO,GAAG;AACd,WAASC,OAAO,CAAC,uBAAD;AADF,CAAhB;AAIA,MAAMC,SAAS,GAAGP,gBAAgB,CAAC;AACjCC,EAAAA,MADiC;AAEjCC,EAAAA,KAFiC;AAGjCC,EAAAA,WAHiC;AAIjCC,EAAAA,MAJiC;AAKjCC,EAAAA;AALiC,CAAD,CAAlC;AAQA,MAAMG,QAAQ,GAAG,CACf;AACEC,EAAAA,KAAK,EAAG,SADV;AAEEC,EAAAA,MAAM,EAAG,IAFX;AAGEC,EAAAA,KAAK,EAAG,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,CAHV;AAIEC,EAAAA,GAAG,EAAG,IAAID,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAJR,CADe,CAAjB;;AASA,SAASE,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AAACW,IAAAA,KAAK,EAAG,EAAT;AAAaE,IAAAA,KAAK,EAAG,EAArB;AAAyBE,IAAAA,GAAG,EAAG;AAA/B,GAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAACU,QAAD,CAA1C;;AAEA,WAASW,cAAT,GAA0B;AACxBD,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAcF,QAAd,CAAD,CAAZ;AACD;;AAED,sBACE,QAAC,QAAD;AACA,IAAA,SAAS,EAAER,SADX;AAEA,IAAA,MAAM,EAAEU,SAFR;AAGA,IAAA,aAAa,EAAC,OAHd;AAIA,IAAA,WAAW,EAAC,KAJZ;AAKA,IAAA,KAAK,EAAG;AAACG,MAAAA,MAAM,EAAG,GAAV;AAAeC,MAAAA,MAAM,EAAG;AAAxB;AALR;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhBQP,U;;KAAAA,U;AAkBT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\r\nimport format from \"date-fns/format\"\r\nimport parse from \"date-fns/parse\";\r\nimport startOfWeek from \"date-fns/startOfWeek\"\r\nimport getDay from \"date-fns/getDay\";\r\n\r\nconst locales = {\r\n  \"en-US\": require(\"date-fns/locale/en-US\")\r\n}\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales\r\n})\r\n\r\nconst myEvents = [\r\n  {\r\n    title : \"Meeting\",\r\n    allDay : true,\r\n    start : new Date(2022,2,1),\r\n    end : new Date(2022,2,2)\r\n  },\r\n]\r\n\r\nfunction CalendarUI() {\r\n  const [newEvent, setNewEvent] = useState({title : \"\", start : \"\", end : \"\"})\r\n  const [allEvents, setAllEvents] = useState(myEvents)\r\n\r\n  function handleAddEvent() {\r\n    setAllEvents([...allEvents,newEvent])\r\n  }\r\n\r\n  return(\r\n    <Calendar\r\n    localizer={localizer}\r\n    events={allEvents}\r\n    startAccessor=\"start\"\r\n    endAccessor=\"end\"\r\n    style ={{height : 800, margin : \"50px\"}} />\r\n  )\r\n}\r\n\r\nexport default CalendarUI;\r\n"]},"metadata":{},"sourceType":"module"}